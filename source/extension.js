const vscode = require("vscode"); const fs = require("fs"); const request = require("request"); const extract = require("extract-zip"); const path = require("path"); const events = require("events"); const msg = require(".\/messages").messages; var objectFiles = [path.resolve((__dirname + "\/..\/assets\/theme.css"))]; function activate(context) {process.on("uncaughtException", err => { const regX = /ENOENT|EACCES|EPERM/; if (regX.test(err.code)) {vscode.window.showInformationMessage(msg.admin); };  }); let event_emitter = new events.EventEmitter(); const is_win_reg_x = /^win/; let is_win = is_win_reg_x.test(process.platform); let app_dir = path.dirname(require.main.filename); function get_win(win_part, unix_part) {if (is_win) {return win_part; ; } else {return unix_part; ; }; }; let base = (app_dir + get_win("\\vs\\workbench", "\/vs\/workbench")); let html_file = (base + get_win("\\electron-browser\\bootstrap\\index.html", "\/electron-browser\/bootstrap\/index.html")); let html_file_back = (base + get_win("\\electron-browser\\bootstrap\\index.html.bak-customcss", "\/electron-browser\/bootstrap\/index.bak-customcss")); function replace_css() {const is_js = /\.js$/; const is_css = /\.css$/; function html_mapper_function(x) {if (!x) {return; }; if ((typeof x === "string")) {if (is_js.test(x)) {return ("<script src=" + x + "><\/script>"); ; }; if (is_css.test(x)) {return ("<link rel=\"stylesheet\" type=\"text\/css\" href=\"" + x + "\"\/>"); ; }; }; }; let inject_html = assetFiles.map(mapper_function); inject_html = inject_html.join(``); try { let html = fs.readFileSync(html_file, "utf-8"); html = html.replace(new RegExp("<!-- !! VSCODE-CUSTOM-CSS-START !! -->[\s\S]*?<!-- !! VSCODE-CUSTOM-CSS-END !! -->"), ``); html = html.replace(new RegExp("(<\/html>)"), ("<!-- !! VSCODE-CUSTOM-CSS-START !! -->" + inject_html + "<!-- !! VSCODE-CUSTOM-CSS-END !! --><\/html>")); } catch (e) {console.error(e); }; }; }; 